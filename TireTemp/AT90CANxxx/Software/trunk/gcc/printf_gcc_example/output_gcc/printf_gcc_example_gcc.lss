
printf_gcc_example_gcc.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000005a  00800100  00000c68  00000cfc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c68  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000058  0080015a  0080015a  00000d56  2**0
                  ALLOC
  3 .stab         00000408  00000000  00000000  00000d58  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000084  00000000  00000000  00001160  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000040  00000000  00000000  000011e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000006c  00000000  00000000  00001224  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000615  00000000  00000000  00001290  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000001e1  00000000  00000000  000018a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000535  00000000  00000000  00001a86  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000060  00000000  00000000  00001fbb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000001a  00000000  00000000  0000201b  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 4a 00 	jmp	0x94	; 0x94 <__ctors_end>
   4:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
   8:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
   c:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  10:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  14:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  18:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  1c:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  20:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  24:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  28:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  2c:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  30:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  34:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  38:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  3c:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  40:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  44:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  48:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  4c:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  50:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  54:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  58:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  5c:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  60:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  64:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  68:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  6c:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  70:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  74:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  78:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  7c:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  80:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  84:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  88:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  8c:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>
  90:	0c 94 67 00 	jmp	0xce	; 0xce <__bad_interrupt>

00000094 <__ctors_end>:
  94:	11 24       	eor	r1, r1
  96:	1f be       	out	0x3f, r1	; 63
  98:	cf ef       	ldi	r28, 0xFF	; 255
  9a:	d0 e1       	ldi	r29, 0x10	; 16
  9c:	de bf       	out	0x3e, r29	; 62
  9e:	cd bf       	out	0x3d, r28	; 61

000000a0 <__do_copy_data>:
  a0:	11 e0       	ldi	r17, 0x01	; 1
  a2:	a0 e0       	ldi	r26, 0x00	; 0
  a4:	b1 e0       	ldi	r27, 0x01	; 1
  a6:	e8 e6       	ldi	r30, 0x68	; 104
  a8:	fc e0       	ldi	r31, 0x0C	; 12
  aa:	00 e0       	ldi	r16, 0x00	; 0
  ac:	0b bf       	out	0x3b, r16	; 59
  ae:	02 c0       	rjmp	.+4      	; 0xb4 <__do_copy_data+0x14>
  b0:	07 90       	elpm	r0, Z+
  b2:	0d 92       	st	X+, r0
  b4:	aa 35       	cpi	r26, 0x5A	; 90
  b6:	b1 07       	cpc	r27, r17
  b8:	d9 f7       	brne	.-10     	; 0xb0 <__do_copy_data+0x10>

000000ba <__do_clear_bss>:
  ba:	11 e0       	ldi	r17, 0x01	; 1
  bc:	aa e5       	ldi	r26, 0x5A	; 90
  be:	b1 e0       	ldi	r27, 0x01	; 1
  c0:	01 c0       	rjmp	.+2      	; 0xc4 <.do_clear_bss_start>

000000c2 <.do_clear_bss_loop>:
  c2:	1d 92       	st	X+, r1

000000c4 <.do_clear_bss_start>:
  c4:	a2 3b       	cpi	r26, 0xB2	; 178
  c6:	b1 07       	cpc	r27, r17
  c8:	e1 f7       	brne	.-8      	; 0xc2 <.do_clear_bss_loop>
  ca:	0c 94 69 00 	jmp	0xd2	; 0xd2 <main>

000000ce <__bad_interrupt>:
  ce:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000d2 <main>:

FILE uart_str = FDEV_SETUP_STREAM(uart_put_char, uart_get_char, _FDEV_SETUP_RW);

int main (void)
{
  d2:	cf 93       	push	r28
  d4:	df 93       	push	r29
  d6:	cd b7       	in	r28, 0x3d	; 61
  d8:	de b7       	in	r29, 0x3e	; 62
  da:	a9 97       	sbiw	r28, 0x29	; 41
  dc:	0f b6       	in	r0, 0x3f	; 63
  de:	f8 94       	cli
  e0:	de bf       	out	0x3e, r29	; 62
  e2:	0f be       	out	0x3f, r0	; 63
  e4:	cd bf       	out	0x3d, r28	; 61
char buf[20], s[20];
U8 u8_temp=0x55;
  e6:	85 e5       	ldi	r24, 0x55	; 85
  e8:	89 83       	std	Y+1, r24	; 0x01

  // UART Initialization
    uart_init();
  ea:	0e 94 b9 00 	call	0x172	; 0x172 <uart_init>
  // 'printf' initialization
    stdout = stdin = stderr = &uart_str;
  ee:	80 e0       	ldi	r24, 0x00	; 0
  f0:	91 e0       	ldi	r25, 0x01	; 1
  f2:	90 93 b1 01 	sts	0x01B1, r25
  f6:	80 93 b0 01 	sts	0x01B0, r24
  fa:	80 91 b0 01 	lds	r24, 0x01B0
  fe:	90 91 b1 01 	lds	r25, 0x01B1
 102:	90 93 ad 01 	sts	0x01AD, r25
 106:	80 93 ac 01 	sts	0x01AC, r24
 10a:	80 91 ac 01 	lds	r24, 0x01AC
 10e:	90 91 ad 01 	lds	r25, 0x01AD
 112:	90 93 af 01 	sts	0x01AF, r25
 116:	80 93 ae 01 	sts	0x01AE, r24
    
  // 'printf' test
    printf ("Hello world, the magic value is = 0x%X ... fifty-five !\r\n", u8_temp);
 11a:	89 81       	ldd	r24, Y+1	; 0x01
 11c:	99 27       	eor	r25, r25
 11e:	9f 93       	push	r25
 120:	8f 93       	push	r24
 122:	8e e0       	ldi	r24, 0x0E	; 14
 124:	91 e0       	ldi	r25, 0x01	; 1
 126:	9f 93       	push	r25
 128:	8f 93       	push	r24
 12a:	0e 94 de 02 	call	0x5bc	; 0x5bc <printf>
 12e:	0f 90       	pop	r0
 130:	0f 90       	pop	r0
 132:	0f 90       	pop	r0
 134:	0f 90       	pop	r0
    u8_temp++;
 136:	89 81       	ldd	r24, Y+1	; 0x01
 138:	8f 5f       	subi	r24, 0xFF	; 255
 13a:	89 83       	std	Y+1, r24	; 0x01
 
	// get characters test
	uart_get_char(&uart_str);
 13c:	80 e0       	ldi	r24, 0x00	; 0
 13e:	91 e0       	ldi	r25, 0x01	; 1
 140:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <uart_get_char>
	fprintf(&uart_str, "Got: %s\n", s);
 144:	ce 01       	movw	r24, r28
 146:	46 96       	adiw	r24, 0x16	; 22
 148:	9f 93       	push	r25
 14a:	8f 93       	push	r24
 14c:	88 e4       	ldi	r24, 0x48	; 72
 14e:	91 e0       	ldi	r25, 0x01	; 1
 150:	9f 93       	push	r25
 152:	8f 93       	push	r24
 154:	80 e0       	ldi	r24, 0x00	; 0
 156:	91 e0       	ldi	r25, 0x01	; 1
 158:	9f 93       	push	r25
 15a:	8f 93       	push	r24
 15c:	0e 94 7f 02 	call	0x4fe	; 0x4fe <fprintf>
 160:	8d b7       	in	r24, 0x3d	; 61
 162:	9e b7       	in	r25, 0x3e	; 62
 164:	06 96       	adiw	r24, 0x06	; 6
 166:	0f b6       	in	r0, 0x3f	; 63
 168:	f8 94       	cli
 16a:	9e bf       	out	0x3e, r25	; 62
 16c:	0f be       	out	0x3f, r0	; 63
 16e:	8d bf       	out	0x3d, r24	; 61
	
	while(1); // Stop !
 170:	ff cf       	rjmp	.-2      	; 0x170 <main+0x9e>

00000172 <uart_init>:
//! @return (none)
//!
//******************************************************************************
void uart_init(void)
{
 172:	cf 93       	push	r28
 174:	df 93       	push	r29
 176:	cd b7       	in	r28, 0x3d	; 61
 178:	de b7       	in	r29, 0x3e	; 62
    UCSRB_N = 0 ;                     // Disable UART
 17a:	e1 ec       	ldi	r30, 0xC1	; 193
 17c:	f0 e0       	ldi	r31, 0x00	; 0
 17e:	10 82       	st	Z, r1
    Uart_set_baudrate(UART_BAUDRATE); // Macro in "uart_no_int_lib.h"
 180:	e5 ec       	ldi	r30, 0xC5	; 197
 182:	f0 e0       	ldi	r31, 0x00	; 0
 184:	10 82       	st	Z, r1
 186:	e4 ec       	ldi	r30, 0xC4	; 196
 188:	f0 e0       	ldi	r31, 0x00	; 0
 18a:	89 e1       	ldi	r24, 0x19	; 25
 18c:	80 83       	st	Z, r24
 18e:	a0 ec       	ldi	r26, 0xC0	; 192
 190:	b0 e0       	ldi	r27, 0x00	; 0
 192:	e0 ec       	ldi	r30, 0xC0	; 192
 194:	f0 e0       	ldi	r31, 0x00	; 0
 196:	80 81       	ld	r24, Z
 198:	82 60       	ori	r24, 0x02	; 2
 19a:	8c 93       	st	X, r24
    UCSRA_N |= (1<<UDRE_N);
 19c:	a0 ec       	ldi	r26, 0xC0	; 192
 19e:	b0 e0       	ldi	r27, 0x00	; 0
 1a0:	e0 ec       	ldi	r30, 0xC0	; 192
 1a2:	f0 e0       	ldi	r31, 0x00	; 0
 1a4:	80 81       	ld	r24, Z
 1a6:	80 62       	ori	r24, 0x20	; 32
 1a8:	8c 93       	st	X, r24
    UCSRC_N  = (1<<USBS_N) | (1<<UCSZ1_N) | (1<<UCSZ0_N);
 1aa:	e2 ec       	ldi	r30, 0xC2	; 194
 1ac:	f0 e0       	ldi	r31, 0x00	; 0
 1ae:	8e e0       	ldi	r24, 0x0E	; 14
 1b0:	80 83       	st	Z, r24
    UCSRB_N  = (1<<RXEN_N) | (1<<TXEN_N);  // then, (re)enable UART
 1b2:	e1 ec       	ldi	r30, 0xC1	; 193
 1b4:	f0 e0       	ldi	r31, 0x00	; 0
 1b6:	88 e1       	ldi	r24, 0x18	; 24
 1b8:	80 83       	st	Z, r24
 1ba:	df 91       	pop	r29
 1bc:	cf 91       	pop	r28
 1be:	08 95       	ret

000001c0 <uart_get_char>:
}

//******************************************************************************
//  @fn get_char_uart
//!
//! Receive a character from the UART Rx.
//!
//! This features a simple line-editor that allows to delete and
//! re-edit the characters entered, until either CR or NL is entered.
//! Printable characters entered will be echoed using uart_put_char().
//!
//! Editing characters:
//!   - \b (BS) or \177 (DEL) delete the previous character
//!   - ^u kills the entire input buffer
//!   - ^w deletes the previous word
//!   - ^r sends a CR, and then reprints the buffer
//!   - \t will be replaced by a single space
//!
//! All other control characters will be ignored.
//!
//! The internal line buffer is RX_BUFSIZE (80) characters long, which
//! includes the terminating \n (but no terminating \0).  If the buffer
//! is full (i. e., at RX_BUFSIZE-1 characters in order to keep space for
//! the trailing \n), any further input attempts will send a \a to
//! uart_put_char() (BEL character), although line editing is still
//! allowed.
//!
//! Input errors while talking to the UART will cause an immediate
//! return of -1 (error indication).  Notably, this will be caused by a
//! framing error (e. g. serial line "break" condition), by an input
//! overrun, and by a parity error (if parity was enabled and automatic
//! parity recognition is supported by hardware).
//!
//! Successive calls to uart_get_char() will be satisfied from the
//! internal buffer until that buffer is emptied again.
//!
//!
//!
//! Get byte from RX UART. If UART has received a character, this character
//! is returned, if no character has been received, 0x00 is returned.
//!
//! @warning "uart_init()" must be performed before
//!
//! @param (none)
//!
//! @return Character from RX UART or 0x00 if nothing received
//!
//******************************************************************************
int uart_get_char(FILE *stream)
{
 1c0:	cf 93       	push	r28
 1c2:	df 93       	push	r29
 1c4:	cd b7       	in	r28, 0x3d	; 61
 1c6:	de b7       	in	r29, 0x3e	; 62
 1c8:	2b 97       	sbiw	r28, 0x0b	; 11
 1ca:	0f b6       	in	r0, 0x3f	; 63
 1cc:	f8 94       	cli
 1ce:	de bf       	out	0x3e, r29	; 62
 1d0:	0f be       	out	0x3f, r0	; 63
 1d2:	cd bf       	out	0x3d, r28	; 61
 1d4:	9f 83       	std	Y+7, r25	; 0x07
 1d6:	8e 83       	std	Y+6, r24	; 0x06
    U8 c;
    char *cp, *cp2;
    static char b[RX_BUFSIZE];
    static char *rxp;

    if (rxp == 0)
 1d8:	80 91 5a 01 	lds	r24, 0x015A
 1dc:	90 91 5b 01 	lds	r25, 0x015B
 1e0:	00 97       	sbiw	r24, 0x00	; 0
 1e2:	09 f0       	breq	.+2      	; 0x1e6 <uart_get_char+0x26>
 1e4:	26 c1       	rjmp	.+588    	; 0x432 <uart_get_char+0x272>
    {
        for (cp = b;;)
 1e6:	8c e5       	ldi	r24, 0x5C	; 92
 1e8:	91 e0       	ldi	r25, 0x01	; 1
 1ea:	9c 83       	std	Y+4, r25	; 0x04
 1ec:	8b 83       	std	Y+3, r24	; 0x03
 1ee:	00 c0       	rjmp	.+0      	; 0x1f0 <uart_get_char+0x30>
        {
            while ( !(UCSRA_N & (1<<RXC_N)) );
 1f0:	e0 ec       	ldi	r30, 0xC0	; 192
 1f2:	f0 e0       	ldi	r31, 0x00	; 0
 1f4:	80 81       	ld	r24, Z
 1f6:	88 23       	and	r24, r24
 1f8:	dc f7       	brge	.-10     	; 0x1f0 <uart_get_char+0x30>
            
            if (UCSRA_N & (1<<FE_N))  return _FDEV_EOF;
 1fa:	e0 ec       	ldi	r30, 0xC0	; 192
 1fc:	f0 e0       	ldi	r31, 0x00	; 0
 1fe:	80 81       	ld	r24, Z
 200:	99 27       	eor	r25, r25
 202:	80 71       	andi	r24, 0x10	; 16
 204:	90 70       	andi	r25, 0x00	; 0
 206:	00 97       	sbiw	r24, 0x00	; 0
 208:	29 f0       	breq	.+10     	; 0x214 <uart_get_char+0x54>
 20a:	2e ef       	ldi	r18, 0xFE	; 254
 20c:	3f ef       	ldi	r19, 0xFF	; 255
 20e:	3b 87       	std	Y+11, r19	; 0x0b
 210:	2a 87       	std	Y+10, r18	; 0x0a
 212:	27 c1       	rjmp	.+590    	; 0x462 <uart_get_char+0x2a2>
	        if (UCSRA_N & (1<<DOR_N)) return _FDEV_ERR;
 214:	e0 ec       	ldi	r30, 0xC0	; 192
 216:	f0 e0       	ldi	r31, 0x00	; 0
 218:	80 81       	ld	r24, Z
 21a:	99 27       	eor	r25, r25
 21c:	88 70       	andi	r24, 0x08	; 8
 21e:	90 70       	andi	r25, 0x00	; 0
 220:	00 97       	sbiw	r24, 0x00	; 0
 222:	29 f0       	breq	.+10     	; 0x22e <uart_get_char+0x6e>
 224:	8f ef       	ldi	r24, 0xFF	; 255
 226:	9f ef       	ldi	r25, 0xFF	; 255
 228:	9b 87       	std	Y+11, r25	; 0x0b
 22a:	8a 87       	std	Y+10, r24	; 0x0a
 22c:	1a c1       	rjmp	.+564    	; 0x462 <uart_get_char+0x2a2>
	        c = UDR_N;
 22e:	e6 ec       	ldi	r30, 0xC6	; 198
 230:	f0 e0       	ldi	r31, 0x00	; 0
 232:	80 81       	ld	r24, Z
 234:	8d 83       	std	Y+5, r24	; 0x05
	        
	        //! Behaviour similar to Unix stty ICRNL */
	        if (c == '\r') c = '\n';
 236:	8d 81       	ldd	r24, Y+5	; 0x05
 238:	8d 30       	cpi	r24, 0x0D	; 13
 23a:	11 f4       	brne	.+4      	; 0x240 <uart_get_char+0x80>
 23c:	8a e0       	ldi	r24, 0x0A	; 10
 23e:	8d 83       	std	Y+5, r24	; 0x05
	        if (c == '\n')
 240:	8d 81       	ldd	r24, Y+5	; 0x05
 242:	8a 30       	cpi	r24, 0x0A	; 10
 244:	89 f4       	brne	.+34     	; 0x268 <uart_get_char+0xa8>
	        {
	            *cp = c;
 246:	eb 81       	ldd	r30, Y+3	; 0x03
 248:	fc 81       	ldd	r31, Y+4	; 0x04
 24a:	8d 81       	ldd	r24, Y+5	; 0x05
 24c:	80 83       	st	Z, r24
	            uart_put_char(c, stream);
 24e:	8e 81       	ldd	r24, Y+6	; 0x06
 250:	9f 81       	ldd	r25, Y+7	; 0x07
 252:	bc 01       	movw	r22, r24
 254:	8d 81       	ldd	r24, Y+5	; 0x05
 256:	0e 94 3c 02 	call	0x478	; 0x478 <uart_put_char>
	            rxp = b;
 25a:	8c e5       	ldi	r24, 0x5C	; 92
 25c:	91 e0       	ldi	r25, 0x01	; 1
 25e:	90 93 5b 01 	sts	0x015B, r25
 262:	80 93 5a 01 	sts	0x015A, r24
	            break;
 266:	e5 c0       	rjmp	.+458    	; 0x432 <uart_get_char+0x272>
	        }
	        else if (c == '\t') c = ' ';
 268:	8d 81       	ldd	r24, Y+5	; 0x05
 26a:	89 30       	cpi	r24, 0x09	; 9
 26c:	11 f4       	brne	.+4      	; 0x272 <uart_get_char+0xb2>
 26e:	80 e2       	ldi	r24, 0x20	; 32
 270:	8d 83       	std	Y+5, r24	; 0x05

	        if ((c >= (U8)' ' && c <= (U8)'\x7e') || c >= (U8)'\xa0')
 272:	8d 81       	ldd	r24, Y+5	; 0x05
 274:	80 32       	cpi	r24, 0x20	; 32
 276:	18 f0       	brcs	.+6      	; 0x27e <uart_get_char+0xbe>
 278:	8d 81       	ldd	r24, Y+5	; 0x05
 27a:	8f 37       	cpi	r24, 0x7F	; 127
 27c:	18 f0       	brcs	.+6      	; 0x284 <uart_get_char+0xc4>
 27e:	8d 81       	ldd	r24, Y+5	; 0x05
 280:	80 3a       	cpi	r24, 0xA0	; 160
 282:	f0 f0       	brcs	.+60     	; 0x2c0 <uart_get_char+0x100>
	        {
	            if (cp == b + RX_BUFSIZE - 1) uart_put_char('\a', stream);
 284:	2b ea       	ldi	r18, 0xAB	; 171
 286:	31 e0       	ldi	r19, 0x01	; 1
 288:	8b 81       	ldd	r24, Y+3	; 0x03
 28a:	9c 81       	ldd	r25, Y+4	; 0x04
 28c:	82 17       	cp	r24, r18
 28e:	93 07       	cpc	r25, r19
 290:	39 f4       	brne	.+14     	; 0x2a0 <uart_get_char+0xe0>
 292:	8e 81       	ldd	r24, Y+6	; 0x06
 294:	9f 81       	ldd	r25, Y+7	; 0x07
 296:	bc 01       	movw	r22, r24
 298:	87 e0       	ldi	r24, 0x07	; 7
 29a:	0e 94 3c 02 	call	0x478	; 0x478 <uart_put_char>
 29e:	a8 cf       	rjmp	.-176    	; 0x1f0 <uart_get_char+0x30>
	            else
	            {
		            *cp++ = c;
 2a0:	eb 81       	ldd	r30, Y+3	; 0x03
 2a2:	fc 81       	ldd	r31, Y+4	; 0x04
 2a4:	8d 81       	ldd	r24, Y+5	; 0x05
 2a6:	80 83       	st	Z, r24
 2a8:	8b 81       	ldd	r24, Y+3	; 0x03
 2aa:	9c 81       	ldd	r25, Y+4	; 0x04
 2ac:	01 96       	adiw	r24, 0x01	; 1
 2ae:	9c 83       	std	Y+4, r25	; 0x04
 2b0:	8b 83       	std	Y+3, r24	; 0x03
		            uart_put_char(c, stream);
 2b2:	8e 81       	ldd	r24, Y+6	; 0x06
 2b4:	9f 81       	ldd	r25, Y+7	; 0x07
 2b6:	bc 01       	movw	r22, r24
 2b8:	8d 81       	ldd	r24, Y+5	; 0x05
 2ba:	0e 94 3c 02 	call	0x478	; 0x478 <uart_put_char>
	            }
	         continue;
 2be:	98 cf       	rjmp	.-208    	; 0x1f0 <uart_get_char+0x30>
	        }

	        switch (c)
 2c0:	8d 81       	ldd	r24, Y+5	; 0x05
 2c2:	28 2f       	mov	r18, r24
 2c4:	33 27       	eor	r19, r19
 2c6:	39 87       	std	Y+9, r19	; 0x09
 2c8:	28 87       	std	Y+8, r18	; 0x08
 2ca:	88 85       	ldd	r24, Y+8	; 0x08
 2cc:	99 85       	ldd	r25, Y+9	; 0x09
 2ce:	82 31       	cpi	r24, 0x12	; 18
 2d0:	91 05       	cpc	r25, r1
 2d2:	09 f4       	brne	.+2      	; 0x2d6 <uart_get_char+0x116>
 2d4:	47 c0       	rjmp	.+142    	; 0x364 <uart_get_char+0x1a4>
 2d6:	28 85       	ldd	r18, Y+8	; 0x08
 2d8:	39 85       	ldd	r19, Y+9	; 0x09
 2da:	23 31       	cpi	r18, 0x13	; 19
 2dc:	31 05       	cpc	r19, r1
 2de:	5c f4       	brge	.+22     	; 0x2f6 <uart_get_char+0x136>
 2e0:	88 85       	ldd	r24, Y+8	; 0x08
 2e2:	99 85       	ldd	r25, Y+9	; 0x09
 2e4:	83 30       	cpi	r24, 0x03	; 3
 2e6:	91 05       	cpc	r25, r1
 2e8:	c1 f0       	breq	.+48     	; 0x31a <uart_get_char+0x15a>
 2ea:	28 85       	ldd	r18, Y+8	; 0x08
 2ec:	39 85       	ldd	r19, Y+9	; 0x09
 2ee:	28 30       	cpi	r18, 0x08	; 8
 2f0:	31 05       	cpc	r19, r1
 2f2:	c1 f0       	breq	.+48     	; 0x324 <uart_get_char+0x164>
 2f4:	7d cf       	rjmp	.-262    	; 0x1f0 <uart_get_char+0x30>
 2f6:	88 85       	ldd	r24, Y+8	; 0x08
 2f8:	99 85       	ldd	r25, Y+9	; 0x09
 2fa:	87 31       	cpi	r24, 0x17	; 23
 2fc:	91 05       	cpc	r25, r1
 2fe:	09 f4       	brne	.+2      	; 0x302 <uart_get_char+0x142>
 300:	88 c0       	rjmp	.+272    	; 0x412 <uart_get_char+0x252>
 302:	28 85       	ldd	r18, Y+8	; 0x08
 304:	39 85       	ldd	r19, Y+9	; 0x09
 306:	2f 37       	cpi	r18, 0x7F	; 127
 308:	31 05       	cpc	r19, r1
 30a:	61 f0       	breq	.+24     	; 0x324 <uart_get_char+0x164>
 30c:	88 85       	ldd	r24, Y+8	; 0x08
 30e:	99 85       	ldd	r25, Y+9	; 0x09
 310:	85 31       	cpi	r24, 0x15	; 21
 312:	91 05       	cpc	r25, r1
 314:	09 f4       	brne	.+2      	; 0x318 <uart_get_char+0x158>
 316:	5e c0       	rjmp	.+188    	; 0x3d4 <uart_get_char+0x214>
 318:	6b cf       	rjmp	.-298    	; 0x1f0 <uart_get_char+0x30>
	        {
	            case 'c' & 0x1f:
	                return -1;
 31a:	2f ef       	ldi	r18, 0xFF	; 255
 31c:	3f ef       	ldi	r19, 0xFF	; 255
 31e:	3b 87       	std	Y+11, r19	; 0x0b
 320:	2a 87       	std	Y+10, r18	; 0x0a
 322:	9f c0       	rjmp	.+318    	; 0x462 <uart_get_char+0x2a2>
                
	            case '\b':
	            case '\x7f':
	                if (cp > b)
 324:	8b 81       	ldd	r24, Y+3	; 0x03
 326:	9c 81       	ldd	r25, Y+4	; 0x04
 328:	31 e0       	ldi	r19, 0x01	; 1
 32a:	8c 35       	cpi	r24, 0x5C	; 92
 32c:	93 07       	cpc	r25, r19
 32e:	09 f0       	breq	.+2      	; 0x332 <uart_get_char+0x172>
 330:	08 f4       	brcc	.+2      	; 0x334 <uart_get_char+0x174>
 332:	5e cf       	rjmp	.-324    	; 0x1f0 <uart_get_char+0x30>
	                {
		                uart_put_char('\b', stream);
 334:	8e 81       	ldd	r24, Y+6	; 0x06
 336:	9f 81       	ldd	r25, Y+7	; 0x07
 338:	bc 01       	movw	r22, r24
 33a:	88 e0       	ldi	r24, 0x08	; 8
 33c:	0e 94 3c 02 	call	0x478	; 0x478 <uart_put_char>
		                uart_put_char(' ' , stream);
 340:	8e 81       	ldd	r24, Y+6	; 0x06
 342:	9f 81       	ldd	r25, Y+7	; 0x07
 344:	bc 01       	movw	r22, r24
 346:	80 e2       	ldi	r24, 0x20	; 32
 348:	0e 94 3c 02 	call	0x478	; 0x478 <uart_put_char>
		                uart_put_char('\b', stream);
 34c:	8e 81       	ldd	r24, Y+6	; 0x06
 34e:	9f 81       	ldd	r25, Y+7	; 0x07
 350:	bc 01       	movw	r22, r24
 352:	88 e0       	ldi	r24, 0x08	; 8
 354:	0e 94 3c 02 	call	0x478	; 0x478 <uart_put_char>
		                cp--;
 358:	8b 81       	ldd	r24, Y+3	; 0x03
 35a:	9c 81       	ldd	r25, Y+4	; 0x04
 35c:	01 97       	sbiw	r24, 0x01	; 1
 35e:	9c 83       	std	Y+4, r25	; 0x04
 360:	8b 83       	std	Y+3, r24	; 0x03
	                }
	                break;
 362:	46 cf       	rjmp	.-372    	; 0x1f0 <uart_get_char+0x30>
                
	            case 'r' & 0x1f:
	                uart_put_char('\r', stream);
 364:	8e 81       	ldd	r24, Y+6	; 0x06
 366:	9f 81       	ldd	r25, Y+7	; 0x07
 368:	bc 01       	movw	r22, r24
 36a:	8d e0       	ldi	r24, 0x0D	; 13
 36c:	0e 94 3c 02 	call	0x478	; 0x478 <uart_put_char>
	                for (cp2 = b; cp2 < cp; cp2++) uart_put_char(*cp2, stream);
 370:	8c e5       	ldi	r24, 0x5C	; 92
 372:	91 e0       	ldi	r25, 0x01	; 1
 374:	9a 83       	std	Y+2, r25	; 0x02
 376:	89 83       	std	Y+1, r24	; 0x01
 378:	0e c0       	rjmp	.+28     	; 0x396 <uart_get_char+0x1d6>
 37a:	e9 81       	ldd	r30, Y+1	; 0x01
 37c:	fa 81       	ldd	r31, Y+2	; 0x02
 37e:	20 81       	ld	r18, Z
 380:	8e 81       	ldd	r24, Y+6	; 0x06
 382:	9f 81       	ldd	r25, Y+7	; 0x07
 384:	bc 01       	movw	r22, r24
 386:	82 2f       	mov	r24, r18
 388:	0e 94 3c 02 	call	0x478	; 0x478 <uart_put_char>
 38c:	89 81       	ldd	r24, Y+1	; 0x01
 38e:	9a 81       	ldd	r25, Y+2	; 0x02
 390:	01 96       	adiw	r24, 0x01	; 1
 392:	9a 83       	std	Y+2, r25	; 0x02
 394:	89 83       	std	Y+1, r24	; 0x01
 396:	29 81       	ldd	r18, Y+1	; 0x01
 398:	3a 81       	ldd	r19, Y+2	; 0x02
 39a:	8b 81       	ldd	r24, Y+3	; 0x03
 39c:	9c 81       	ldd	r25, Y+4	; 0x04
 39e:	28 17       	cp	r18, r24
 3a0:	39 07       	cpc	r19, r25
 3a2:	58 f3       	brcs	.-42     	; 0x37a <uart_get_char+0x1ba>
	                break;
 3a4:	25 cf       	rjmp	.-438    	; 0x1f0 <uart_get_char+0x30>
                
	            case 'u' & 0x1f:
	                while (cp > b)
	                {
		                uart_put_char('\b', stream);
 3a6:	8e 81       	ldd	r24, Y+6	; 0x06
 3a8:	9f 81       	ldd	r25, Y+7	; 0x07
 3aa:	bc 01       	movw	r22, r24
 3ac:	88 e0       	ldi	r24, 0x08	; 8
 3ae:	0e 94 3c 02 	call	0x478	; 0x478 <uart_put_char>
		                uart_put_char(' ' , stream);
 3b2:	8e 81       	ldd	r24, Y+6	; 0x06
 3b4:	9f 81       	ldd	r25, Y+7	; 0x07
 3b6:	bc 01       	movw	r22, r24
 3b8:	80 e2       	ldi	r24, 0x20	; 32
 3ba:	0e 94 3c 02 	call	0x478	; 0x478 <uart_put_char>
		                uart_put_char('\b', stream);
 3be:	8e 81       	ldd	r24, Y+6	; 0x06
 3c0:	9f 81       	ldd	r25, Y+7	; 0x07
 3c2:	bc 01       	movw	r22, r24
 3c4:	88 e0       	ldi	r24, 0x08	; 8
 3c6:	0e 94 3c 02 	call	0x478	; 0x478 <uart_put_char>
		                cp--;
 3ca:	8b 81       	ldd	r24, Y+3	; 0x03
 3cc:	9c 81       	ldd	r25, Y+4	; 0x04
 3ce:	01 97       	sbiw	r24, 0x01	; 1
 3d0:	9c 83       	std	Y+4, r25	; 0x04
 3d2:	8b 83       	std	Y+3, r24	; 0x03
 3d4:	8b 81       	ldd	r24, Y+3	; 0x03
 3d6:	9c 81       	ldd	r25, Y+4	; 0x04
 3d8:	21 e0       	ldi	r18, 0x01	; 1
 3da:	8c 35       	cpi	r24, 0x5C	; 92
 3dc:	92 07       	cpc	r25, r18
 3de:	09 f0       	breq	.+2      	; 0x3e2 <uart_get_char+0x222>
 3e0:	10 f7       	brcc	.-60     	; 0x3a6 <uart_get_char+0x1e6>
	                }
	                break;
 3e2:	06 cf       	rjmp	.-500    	; 0x1f0 <uart_get_char+0x30>
                
	            case 'w' & 0x1f:
	                while (cp > b && cp[-1] != ' ')
	                {
		                uart_put_char('\b', stream);
 3e4:	8e 81       	ldd	r24, Y+6	; 0x06
 3e6:	9f 81       	ldd	r25, Y+7	; 0x07
 3e8:	bc 01       	movw	r22, r24
 3ea:	88 e0       	ldi	r24, 0x08	; 8
 3ec:	0e 94 3c 02 	call	0x478	; 0x478 <uart_put_char>
		                uart_put_char(' ' , stream);
 3f0:	8e 81       	ldd	r24, Y+6	; 0x06
 3f2:	9f 81       	ldd	r25, Y+7	; 0x07
 3f4:	bc 01       	movw	r22, r24
 3f6:	80 e2       	ldi	r24, 0x20	; 32
 3f8:	0e 94 3c 02 	call	0x478	; 0x478 <uart_put_char>
		                uart_put_char('\b', stream);
 3fc:	8e 81       	ldd	r24, Y+6	; 0x06
 3fe:	9f 81       	ldd	r25, Y+7	; 0x07
 400:	bc 01       	movw	r22, r24
 402:	88 e0       	ldi	r24, 0x08	; 8
 404:	0e 94 3c 02 	call	0x478	; 0x478 <uart_put_char>
		                cp--;
 408:	8b 81       	ldd	r24, Y+3	; 0x03
 40a:	9c 81       	ldd	r25, Y+4	; 0x04
 40c:	01 97       	sbiw	r24, 0x01	; 1
 40e:	9c 83       	std	Y+4, r25	; 0x04
 410:	8b 83       	std	Y+3, r24	; 0x03
 412:	8b 81       	ldd	r24, Y+3	; 0x03
 414:	9c 81       	ldd	r25, Y+4	; 0x04
 416:	31 e0       	ldi	r19, 0x01	; 1
 418:	8c 35       	cpi	r24, 0x5C	; 92
 41a:	93 07       	cpc	r25, r19
 41c:	09 f0       	breq	.+2      	; 0x420 <uart_get_char+0x260>
 41e:	08 f4       	brcc	.+2      	; 0x422 <uart_get_char+0x262>
 420:	e7 ce       	rjmp	.-562    	; 0x1f0 <uart_get_char+0x30>
 422:	8b 81       	ldd	r24, Y+3	; 0x03
 424:	9c 81       	ldd	r25, Y+4	; 0x04
 426:	fc 01       	movw	r30, r24
 428:	31 97       	sbiw	r30, 0x01	; 1
 42a:	80 81       	ld	r24, Z
 42c:	80 32       	cpi	r24, 0x20	; 32
 42e:	d1 f6       	brne	.-76     	; 0x3e4 <uart_get_char+0x224>
	                }
	                break;
	        }
        }
 430:	df ce       	rjmp	.-578    	; 0x1f0 <uart_get_char+0x30>
    }

    c = *rxp++;
 432:	e0 91 5a 01 	lds	r30, 0x015A
 436:	f0 91 5b 01 	lds	r31, 0x015B
 43a:	80 81       	ld	r24, Z
 43c:	8d 83       	std	Y+5, r24	; 0x05
 43e:	cf 01       	movw	r24, r30
 440:	01 96       	adiw	r24, 0x01	; 1
 442:	90 93 5b 01 	sts	0x015B, r25
 446:	80 93 5a 01 	sts	0x015A, r24
    if (c == '\n') rxp = 0;
 44a:	8d 81       	ldd	r24, Y+5	; 0x05
 44c:	8a 30       	cpi	r24, 0x0A	; 10
 44e:	21 f4       	brne	.+8      	; 0x458 <uart_get_char+0x298>
 450:	10 92 5b 01 	sts	0x015B, r1
 454:	10 92 5a 01 	sts	0x015A, r1

    return c;
 458:	8d 81       	ldd	r24, Y+5	; 0x05
 45a:	28 2f       	mov	r18, r24
 45c:	33 27       	eor	r19, r19
 45e:	3b 87       	std	Y+11, r19	; 0x0b
 460:	2a 87       	std	Y+10, r18	; 0x0a
 462:	8a 85       	ldd	r24, Y+10	; 0x0a
 464:	9b 85       	ldd	r25, Y+11	; 0x0b
 466:	2b 96       	adiw	r28, 0x0b	; 11
 468:	0f b6       	in	r0, 0x3f	; 63
 46a:	f8 94       	cli
 46c:	de bf       	out	0x3e, r29	; 62
 46e:	0f be       	out	0x3f, r0	; 63
 470:	cd bf       	out	0x3d, r28	; 61
 472:	df 91       	pop	r29
 474:	cf 91       	pop	r28
 476:	08 95       	ret

00000478 <uart_put_char>:
}

//******************************************************************************
//  @fn uart_put_char
//!
//! Send a character down the UART Tx and wait until tx holding reg. is empty.
//!
//! @warning "uart_init()" must be performed before
//!
//! @param  character to send
//!
//! @return (0)
//!
//******************************************************************************
int uart_put_char (char c2s, FILE *stream)
{
 478:	cf 93       	push	r28
 47a:	df 93       	push	r29
 47c:	cd b7       	in	r28, 0x3d	; 61
 47e:	de b7       	in	r29, 0x3e	; 62
 480:	25 97       	sbiw	r28, 0x05	; 5
 482:	0f b6       	in	r0, 0x3f	; 63
 484:	f8 94       	cli
 486:	de bf       	out	0x3e, r29	; 62
 488:	0f be       	out	0x3f, r0	; 63
 48a:	cd bf       	out	0x3d, r28	; 61
 48c:	89 83       	std	Y+1, r24	; 0x01
 48e:	7b 83       	std	Y+3, r23	; 0x03
 490:	6a 83       	std	Y+2, r22	; 0x02
    if (c2s == '\a')
 492:	89 81       	ldd	r24, Y+1	; 0x01
 494:	87 30       	cpi	r24, 0x07	; 7
 496:	89 f4       	brne	.+34     	; 0x4ba <uart_put_char+0x42>
    {
        fputs("*ring*\n", stderr);
 498:	80 91 b0 01 	lds	r24, 0x01B0
 49c:	90 91 b1 01 	lds	r25, 0x01B1
 4a0:	e1 e5       	ldi	r30, 0x51	; 81
 4a2:	f1 e0       	ldi	r31, 0x01	; 1
 4a4:	9c 01       	movw	r18, r24
 4a6:	47 e0       	ldi	r20, 0x07	; 7
 4a8:	50 e0       	ldi	r21, 0x00	; 0
 4aa:	61 e0       	ldi	r22, 0x01	; 1
 4ac:	70 e0       	ldi	r23, 0x00	; 0
 4ae:	cf 01       	movw	r24, r30
 4b0:	0e 94 9d 02 	call	0x53a	; 0x53a <fwrite>
        return 0;
 4b4:	1d 82       	std	Y+5, r1	; 0x05
 4b6:	1c 82       	std	Y+4, r1	; 0x04
 4b8:	17 c0       	rjmp	.+46     	; 0x4e8 <uart_put_char+0x70>
    }

    if (c2s == '\n')
 4ba:	89 81       	ldd	r24, Y+1	; 0x01
 4bc:	8a 30       	cpi	r24, 0x0A	; 10
 4be:	31 f4       	brne	.+12     	; 0x4cc <uart_put_char+0x54>
    {
        uart_put_char('\r', stream);
 4c0:	8a 81       	ldd	r24, Y+2	; 0x02
 4c2:	9b 81       	ldd	r25, Y+3	; 0x03
 4c4:	bc 01       	movw	r22, r24
 4c6:	8d e0       	ldi	r24, 0x0D	; 13
 4c8:	0e 94 3c 02 	call	0x478	; 0x478 <uart_put_char>
    }
    while ( !(UCSRA_N & (1<<UDRE_N)) ); // wait for empty transmit buffer 
 4cc:	e0 ec       	ldi	r30, 0xC0	; 192
 4ce:	f0 e0       	ldi	r31, 0x00	; 0
 4d0:	80 81       	ld	r24, Z
 4d2:	99 27       	eor	r25, r25
 4d4:	80 72       	andi	r24, 0x20	; 32
 4d6:	90 70       	andi	r25, 0x00	; 0
 4d8:	00 97       	sbiw	r24, 0x00	; 0
 4da:	c1 f3       	breq	.-16     	; 0x4cc <uart_put_char+0x54>
    UDR_N = c2s;
 4dc:	e6 ec       	ldi	r30, 0xC6	; 198
 4de:	f0 e0       	ldi	r31, 0x00	; 0
 4e0:	89 81       	ldd	r24, Y+1	; 0x01
 4e2:	80 83       	st	Z, r24
    
    return 0;
 4e4:	1d 82       	std	Y+5, r1	; 0x05
 4e6:	1c 82       	std	Y+4, r1	; 0x04
 4e8:	8c 81       	ldd	r24, Y+4	; 0x04
 4ea:	9d 81       	ldd	r25, Y+5	; 0x05
 4ec:	25 96       	adiw	r28, 0x05	; 5
 4ee:	0f b6       	in	r0, 0x3f	; 63
 4f0:	f8 94       	cli
 4f2:	de bf       	out	0x3e, r29	; 62
 4f4:	0f be       	out	0x3f, r0	; 63
 4f6:	cd bf       	out	0x3d, r28	; 61
 4f8:	df 91       	pop	r29
 4fa:	cf 91       	pop	r28
 4fc:	08 95       	ret

000004fe <fprintf>:
 4fe:	cf 93       	push	r28
 500:	df 93       	push	r29
 502:	cd b7       	in	r28, 0x3d	; 61
 504:	de b7       	in	r29, 0x3e	; 62
 506:	22 97       	sbiw	r28, 0x02	; 2
 508:	0f b6       	in	r0, 0x3f	; 63
 50a:	f8 94       	cli
 50c:	de bf       	out	0x3e, r29	; 62
 50e:	0f be       	out	0x3f, r0	; 63
 510:	cd bf       	out	0x3d, r28	; 61
 512:	ae 01       	movw	r20, r28
 514:	45 5f       	subi	r20, 0xF5	; 245
 516:	5f 4f       	sbci	r21, 0xFF	; 255
 518:	5a 83       	std	Y+2, r21	; 0x02
 51a:	49 83       	std	Y+1, r20	; 0x01
 51c:	69 85       	ldd	r22, Y+9	; 0x09
 51e:	7a 85       	ldd	r23, Y+10	; 0x0a
 520:	8f 81       	ldd	r24, Y+7	; 0x07
 522:	98 85       	ldd	r25, Y+8	; 0x08
 524:	0e 94 fe 02 	call	0x5fc	; 0x5fc <vfprintf>
 528:	22 96       	adiw	r28, 0x02	; 2
 52a:	0f b6       	in	r0, 0x3f	; 63
 52c:	f8 94       	cli
 52e:	de bf       	out	0x3e, r29	; 62
 530:	0f be       	out	0x3f, r0	; 63
 532:	cd bf       	out	0x3d, r28	; 61
 534:	df 91       	pop	r29
 536:	cf 91       	pop	r28
 538:	08 95       	ret

0000053a <fwrite>:
 53a:	8f 92       	push	r8
 53c:	9f 92       	push	r9
 53e:	af 92       	push	r10
 540:	bf 92       	push	r11
 542:	cf 92       	push	r12
 544:	df 92       	push	r13
 546:	ef 92       	push	r14
 548:	ff 92       	push	r15
 54a:	0f 93       	push	r16
 54c:	1f 93       	push	r17
 54e:	cf 93       	push	r28
 550:	df 93       	push	r29
 552:	fc 01       	movw	r30, r24
 554:	4b 01       	movw	r8, r22
 556:	5a 01       	movw	r10, r20
 558:	79 01       	movw	r14, r18
 55a:	e9 01       	movw	r28, r18
 55c:	8b 81       	ldd	r24, Y+3	; 0x03
 55e:	81 ff       	sbrs	r24, 1
 560:	1d c0       	rjmp	.+58     	; 0x59c <fwrite+0x62>
 562:	8f 01       	movw	r16, r30
 564:	cc 24       	eor	r12, r12
 566:	dd 24       	eor	r13, r13
 568:	13 c0       	rjmp	.+38     	; 0x590 <fwrite+0x56>
 56a:	f7 01       	movw	r30, r14
 56c:	20 85       	ldd	r18, Z+8	; 0x08
 56e:	31 85       	ldd	r19, Z+9	; 0x09
 570:	b7 01       	movw	r22, r14
 572:	f8 01       	movw	r30, r16
 574:	80 81       	ld	r24, Z
 576:	f9 01       	movw	r30, r18
 578:	09 95       	icall
 57a:	89 2b       	or	r24, r25
 57c:	89 f4       	brne	.+34     	; 0x5a0 <fwrite+0x66>
 57e:	0f 5f       	subi	r16, 0xFF	; 255
 580:	1f 4f       	sbci	r17, 0xFF	; 255
 582:	21 96       	adiw	r28, 0x01	; 1
 584:	c8 15       	cp	r28, r8
 586:	d9 05       	cpc	r29, r9
 588:	81 f7       	brne	.-32     	; 0x56a <fwrite+0x30>
 58a:	08 94       	sec
 58c:	c1 1c       	adc	r12, r1
 58e:	d1 1c       	adc	r13, r1
 590:	ca 14       	cp	r12, r10
 592:	db 04       	cpc	r13, r11
 594:	29 f0       	breq	.+10     	; 0x5a0 <fwrite+0x66>
 596:	c0 e0       	ldi	r28, 0x00	; 0
 598:	d0 e0       	ldi	r29, 0x00	; 0
 59a:	f4 cf       	rjmp	.-24     	; 0x584 <fwrite+0x4a>
 59c:	cc 24       	eor	r12, r12
 59e:	dd 24       	eor	r13, r13
 5a0:	c6 01       	movw	r24, r12
 5a2:	df 91       	pop	r29
 5a4:	cf 91       	pop	r28
 5a6:	1f 91       	pop	r17
 5a8:	0f 91       	pop	r16
 5aa:	ff 90       	pop	r15
 5ac:	ef 90       	pop	r14
 5ae:	df 90       	pop	r13
 5b0:	cf 90       	pop	r12
 5b2:	bf 90       	pop	r11
 5b4:	af 90       	pop	r10
 5b6:	9f 90       	pop	r9
 5b8:	8f 90       	pop	r8
 5ba:	08 95       	ret

000005bc <printf>:
 5bc:	cf 93       	push	r28
 5be:	df 93       	push	r29
 5c0:	cd b7       	in	r28, 0x3d	; 61
 5c2:	de b7       	in	r29, 0x3e	; 62
 5c4:	22 97       	sbiw	r28, 0x02	; 2
 5c6:	0f b6       	in	r0, 0x3f	; 63
 5c8:	f8 94       	cli
 5ca:	de bf       	out	0x3e, r29	; 62
 5cc:	0f be       	out	0x3f, r0	; 63
 5ce:	cd bf       	out	0x3d, r28	; 61
 5d0:	fe 01       	movw	r30, r28
 5d2:	37 96       	adiw	r30, 0x07	; 7
 5d4:	61 91       	ld	r22, Z+
 5d6:	71 91       	ld	r23, Z+
 5d8:	fa 83       	std	Y+2, r31	; 0x02
 5da:	e9 83       	std	Y+1, r30	; 0x01
 5dc:	af 01       	movw	r20, r30
 5de:	80 91 ae 01 	lds	r24, 0x01AE
 5e2:	90 91 af 01 	lds	r25, 0x01AF
 5e6:	0e 94 fe 02 	call	0x5fc	; 0x5fc <vfprintf>
 5ea:	22 96       	adiw	r28, 0x02	; 2
 5ec:	0f b6       	in	r0, 0x3f	; 63
 5ee:	f8 94       	cli
 5f0:	de bf       	out	0x3e, r29	; 62
 5f2:	0f be       	out	0x3f, r0	; 63
 5f4:	cd bf       	out	0x3d, r28	; 61
 5f6:	df 91       	pop	r29
 5f8:	cf 91       	pop	r28
 5fa:	08 95       	ret

000005fc <vfprintf>:
 5fc:	2f 92       	push	r2
 5fe:	3f 92       	push	r3
 600:	4f 92       	push	r4
 602:	5f 92       	push	r5
 604:	6f 92       	push	r6
 606:	7f 92       	push	r7
 608:	8f 92       	push	r8
 60a:	9f 92       	push	r9
 60c:	af 92       	push	r10
 60e:	bf 92       	push	r11
 610:	cf 92       	push	r12
 612:	df 92       	push	r13
 614:	ef 92       	push	r14
 616:	ff 92       	push	r15
 618:	0f 93       	push	r16
 61a:	1f 93       	push	r17
 61c:	cf 93       	push	r28
 61e:	df 93       	push	r29
 620:	cd b7       	in	r28, 0x3d	; 61
 622:	de b7       	in	r29, 0x3e	; 62
 624:	64 97       	sbiw	r28, 0x14	; 20
 626:	0f b6       	in	r0, 0x3f	; 63
 628:	f8 94       	cli
 62a:	de bf       	out	0x3e, r29	; 62
 62c:	0f be       	out	0x3f, r0	; 63
 62e:	cd bf       	out	0x3d, r28	; 61
 630:	cc 24       	eor	r12, r12
 632:	dd 24       	eor	r13, r13
 634:	76 01       	movw	r14, r12
 636:	1c 01       	movw	r2, r24
 638:	7c 8b       	std	Y+20, r23	; 0x14
 63a:	6b 8b       	std	Y+19, r22	; 0x13
 63c:	2a 01       	movw	r4, r20
 63e:	fc 01       	movw	r30, r24
 640:	17 82       	std	Z+7, r1	; 0x07
 642:	16 82       	std	Z+6, r1	; 0x06
 644:	83 81       	ldd	r24, Z+3	; 0x03
 646:	81 fd       	sbrc	r24, 1
 648:	03 c0       	rjmp	.+6      	; 0x650 <vfprintf+0x54>
 64a:	8f ef       	ldi	r24, 0xFF	; 255
 64c:	9f ef       	ldi	r25, 0xFF	; 255
 64e:	85 c2       	rjmp	.+1290   	; 0xb5a <vfprintf+0x55e>
 650:	aa 24       	eor	r10, r10
 652:	bb 24       	eor	r11, r11
 654:	6f c2       	rjmp	.+1246   	; 0xb34 <vfprintf+0x538>
 656:	a0 fe       	sbrs	r10, 0
 658:	54 c2       	rjmp	.+1192   	; 0xb02 <vfprintf+0x506>
 65a:	8a 89       	ldd	r24, Y+18	; 0x12
 65c:	80 53       	subi	r24, 0x30	; 48
 65e:	8a 30       	cpi	r24, 0x0A	; 10
 660:	e8 f4       	brcc	.+58     	; 0x69c <vfprintf+0xa0>
 662:	fa 89       	ldd	r31, Y+18	; 0x12
 664:	f0 33       	cpi	r31, 0x30	; 48
 666:	41 f4       	brne	.+16     	; 0x678 <vfprintf+0x7c>
 668:	2d 85       	ldd	r18, Y+13	; 0x0d
 66a:	22 23       	and	r18, r18
 66c:	29 f4       	brne	.+10     	; 0x678 <vfprintf+0x7c>
 66e:	a3 fc       	sbrc	r10, 3
 670:	03 c0       	rjmp	.+6      	; 0x678 <vfprintf+0x7c>
 672:	80 e0       	ldi	r24, 0x00	; 0
 674:	91 e0       	ldi	r25, 0x01	; 1
 676:	6f c0       	rjmp	.+222    	; 0x756 <vfprintf+0x15a>
 678:	8a e0       	ldi	r24, 0x0A	; 10
 67a:	ed 85       	ldd	r30, Y+13	; 0x0d
 67c:	e8 02       	muls	r30, r24
 67e:	c0 01       	movw	r24, r0
 680:	11 24       	eor	r1, r1
 682:	fa 89       	ldd	r31, Y+18	; 0x12
 684:	f8 0f       	add	r31, r24
 686:	f0 53       	subi	r31, 0x30	; 48
 688:	fd 87       	std	Y+13, r31	; 0x0d
 68a:	f7 ff       	sbrs	r31, 7
 68c:	02 c0       	rjmp	.+4      	; 0x692 <vfprintf+0x96>
 68e:	2f e7       	ldi	r18, 0x7F	; 127
 690:	2d 87       	std	Y+13, r18	; 0x0d
 692:	a3 fc       	sbrc	r10, 3
 694:	49 c2       	rjmp	.+1170   	; 0xb28 <vfprintf+0x52c>
 696:	3d 85       	ldd	r19, Y+13	; 0x0d
 698:	3e 87       	std	Y+14, r19	; 0x0e
 69a:	46 c2       	rjmp	.+1164   	; 0xb28 <vfprintf+0x52c>
 69c:	c5 01       	movw	r24, r10
 69e:	88 70       	andi	r24, 0x08	; 8
 6a0:	90 70       	andi	r25, 0x00	; 0
 6a2:	a3 fe       	sbrs	r10, 3
 6a4:	05 c0       	rjmp	.+10     	; 0x6b0 <vfprintf+0xb4>
 6a6:	ed 85       	ldd	r30, Y+13	; 0x0d
 6a8:	ee 23       	and	r30, r30
 6aa:	11 f4       	brne	.+4      	; 0x6b0 <vfprintf+0xb4>
 6ac:	f1 e0       	ldi	r31, 0x01	; 1
 6ae:	fd 87       	std	Y+13, r31	; 0x0d
 6b0:	2a 89       	ldd	r18, Y+18	; 0x12
 6b2:	28 36       	cpi	r18, 0x68	; 104
 6b4:	24 f5       	brge	.+72     	; 0x6fe <vfprintf+0x102>
 6b6:	25 36       	cpi	r18, 0x65	; 101
 6b8:	0c f0       	brlt	.+2      	; 0x6bc <vfprintf+0xc0>
 6ba:	5b c0       	rjmp	.+182    	; 0x772 <vfprintf+0x176>
 6bc:	23 35       	cpi	r18, 0x53	; 83
 6be:	09 f4       	brne	.+2      	; 0x6c2 <vfprintf+0xc6>
 6c0:	80 c0       	rjmp	.+256    	; 0x7c2 <vfprintf+0x1c6>
 6c2:	24 35       	cpi	r18, 0x54	; 84
 6c4:	8c f4       	brge	.+34     	; 0x6e8 <vfprintf+0xec>
 6c6:	2b 32       	cpi	r18, 0x2B	; 43
 6c8:	c1 f1       	breq	.+112    	; 0x73a <vfprintf+0x13e>
 6ca:	2c 32       	cpi	r18, 0x2C	; 44
 6cc:	34 f4       	brge	.+12     	; 0x6da <vfprintf+0xde>
 6ce:	20 32       	cpi	r18, 0x20	; 32
 6d0:	c1 f1       	breq	.+112    	; 0x742 <vfprintf+0x146>
 6d2:	23 32       	cpi	r18, 0x23	; 35
 6d4:	09 f0       	breq	.+2      	; 0x6d8 <vfprintf+0xdc>
 6d6:	0a c2       	rjmp	.+1044   	; 0xaec <vfprintf+0x4f0>
 6d8:	3c c0       	rjmp	.+120    	; 0x752 <vfprintf+0x156>
 6da:	3a 89       	ldd	r19, Y+18	; 0x12
 6dc:	3d 32       	cpi	r19, 0x2D	; 45
 6de:	b1 f1       	breq	.+108    	; 0x74c <vfprintf+0x150>
 6e0:	3e 32       	cpi	r19, 0x2E	; 46
 6e2:	09 f0       	breq	.+2      	; 0x6e6 <vfprintf+0xea>
 6e4:	03 c2       	rjmp	.+1030   	; 0xaec <vfprintf+0x4f0>
 6e6:	3a c0       	rjmp	.+116    	; 0x75c <vfprintf+0x160>
 6e8:	8a 89       	ldd	r24, Y+18	; 0x12
 6ea:	83 36       	cpi	r24, 0x63	; 99
 6ec:	09 f4       	brne	.+2      	; 0x6f0 <vfprintf+0xf4>
 6ee:	49 c0       	rjmp	.+146    	; 0x782 <vfprintf+0x186>
 6f0:	84 36       	cpi	r24, 0x64	; 100
 6f2:	0c f0       	brlt	.+2      	; 0x6f6 <vfprintf+0xfa>
 6f4:	81 c0       	rjmp	.+258    	; 0x7f8 <vfprintf+0x1fc>
 6f6:	88 35       	cpi	r24, 0x58	; 88
 6f8:	09 f0       	breq	.+2      	; 0x6fc <vfprintf+0x100>
 6fa:	f8 c1       	rjmp	.+1008   	; 0xaec <vfprintf+0x4f0>
 6fc:	1b c0       	rjmp	.+54     	; 0x734 <vfprintf+0x138>
 6fe:	ea 89       	ldd	r30, Y+18	; 0x12
 700:	e0 37       	cpi	r30, 0x70	; 112
 702:	09 f4       	brne	.+2      	; 0x706 <vfprintf+0x10a>
 704:	a3 c0       	rjmp	.+326    	; 0x84c <vfprintf+0x250>
 706:	e1 37       	cpi	r30, 0x71	; 113
 708:	44 f4       	brge	.+16     	; 0x71a <vfprintf+0x11e>
 70a:	ec 36       	cpi	r30, 0x6C	; 108
 70c:	69 f1       	breq	.+90     	; 0x768 <vfprintf+0x16c>
 70e:	ef 36       	cpi	r30, 0x6F	; 111
 710:	71 f0       	breq	.+28     	; 0x72e <vfprintf+0x132>
 712:	e9 36       	cpi	r30, 0x69	; 105
 714:	09 f0       	breq	.+2      	; 0x718 <vfprintf+0x11c>
 716:	ea c1       	rjmp	.+980    	; 0xaec <vfprintf+0x4f0>
 718:	6f c0       	rjmp	.+222    	; 0x7f8 <vfprintf+0x1fc>
 71a:	fa 89       	ldd	r31, Y+18	; 0x12
 71c:	f5 37       	cpi	r31, 0x75	; 117
 71e:	09 f4       	brne	.+2      	; 0x722 <vfprintf+0x126>
 720:	9d c0       	rjmp	.+314    	; 0x85c <vfprintf+0x260>
 722:	f8 37       	cpi	r31, 0x78	; 120
 724:	39 f0       	breq	.+14     	; 0x734 <vfprintf+0x138>
 726:	f3 37       	cpi	r31, 0x73	; 115
 728:	09 f0       	breq	.+2      	; 0x72c <vfprintf+0x130>
 72a:	e0 c1       	rjmp	.+960    	; 0xaec <vfprintf+0x4f0>
 72c:	34 c0       	rjmp	.+104    	; 0x796 <vfprintf+0x19a>
 72e:	28 e0       	ldi	r18, 0x08	; 8
 730:	29 8b       	std	Y+17, r18	; 0x11
 732:	94 c0       	rjmp	.+296    	; 0x85c <vfprintf+0x260>
 734:	30 e1       	ldi	r19, 0x10	; 16
 736:	39 8b       	std	Y+17, r19	; 0x11
 738:	91 c0       	rjmp	.+290    	; 0x85c <vfprintf+0x260>
 73a:	80 e1       	ldi	r24, 0x10	; 16
 73c:	90 e0       	ldi	r25, 0x00	; 0
 73e:	a8 2a       	or	r10, r24
 740:	b9 2a       	or	r11, r25
 742:	e0 e2       	ldi	r30, 0x20	; 32
 744:	f0 e0       	ldi	r31, 0x00	; 0
 746:	ae 2a       	or	r10, r30
 748:	bf 2a       	or	r11, r31
 74a:	ee c1       	rjmp	.+988    	; 0xb28 <vfprintf+0x52c>
 74c:	20 e8       	ldi	r18, 0x80	; 128
 74e:	30 e0       	ldi	r19, 0x00	; 0
 750:	0d c0       	rjmp	.+26     	; 0x76c <vfprintf+0x170>
 752:	80 e4       	ldi	r24, 0x40	; 64
 754:	90 e0       	ldi	r25, 0x00	; 0
 756:	a8 2a       	or	r10, r24
 758:	b9 2a       	or	r11, r25
 75a:	e6 c1       	rjmp	.+972    	; 0xb28 <vfprintf+0x52c>
 75c:	e8 e0       	ldi	r30, 0x08	; 8
 75e:	f0 e0       	ldi	r31, 0x00	; 0
 760:	ae 2a       	or	r10, r30
 762:	bf 2a       	or	r11, r31
 764:	1d 86       	std	Y+13, r1	; 0x0d
 766:	e0 c1       	rjmp	.+960    	; 0xb28 <vfprintf+0x52c>
 768:	24 e0       	ldi	r18, 0x04	; 4
 76a:	30 e0       	ldi	r19, 0x00	; 0
 76c:	a2 2a       	or	r10, r18
 76e:	b3 2a       	or	r11, r19
 770:	db c1       	rjmp	.+950    	; 0xb28 <vfprintf+0x52c>
 772:	3f e3       	ldi	r19, 0x3F	; 63
 774:	c3 2e       	mov	r12, r19
 776:	3e 85       	ldd	r19, Y+14	; 0x0e
 778:	31 50       	subi	r19, 0x01	; 1
 77a:	3e 87       	std	Y+14, r19	; 0x0e
 77c:	83 e6       	ldi	r24, 0x63	; 99
 77e:	8a 8b       	std	Y+18, r24	; 0x12
 780:	41 c1       	rjmp	.+642    	; 0xa04 <vfprintf+0x408>
 782:	f2 01       	movw	r30, r4
 784:	c0 80       	ld	r12, Z
 786:	fe 85       	ldd	r31, Y+14	; 0x0e
 788:	f1 50       	subi	r31, 0x01	; 1
 78a:	fe 87       	std	Y+14, r31	; 0x0e
 78c:	22 e0       	ldi	r18, 0x02	; 2
 78e:	30 e0       	ldi	r19, 0x00	; 0
 790:	42 0e       	add	r4, r18
 792:	53 1e       	adc	r5, r19
 794:	37 c1       	rjmp	.+622    	; 0xa04 <vfprintf+0x408>
 796:	f2 01       	movw	r30, r4
 798:	c0 80       	ld	r12, Z
 79a:	d1 80       	ldd	r13, Z+1	; 0x01
 79c:	89 2b       	or	r24, r25
 79e:	49 f0       	breq	.+18     	; 0x7b2 <vfprintf+0x1b6>
 7a0:	fd 85       	ldd	r31, Y+13	; 0x0d
 7a2:	6f 2f       	mov	r22, r31
 7a4:	77 27       	eor	r23, r23
 7a6:	67 fd       	sbrc	r22, 7
 7a8:	70 95       	com	r23
 7aa:	c6 01       	movw	r24, r12
 7ac:	0e 94 da 05 	call	0xbb4	; 0xbb4 <strnlen>
 7b0:	19 c0       	rjmp	.+50     	; 0x7e4 <vfprintf+0x1e8>
 7b2:	f6 01       	movw	r30, r12
 7b4:	01 90       	ld	r0, Z+
 7b6:	00 20       	and	r0, r0
 7b8:	e9 f7       	brne	.-6      	; 0x7b4 <vfprintf+0x1b8>
 7ba:	31 97       	sbiw	r30, 0x01	; 1
 7bc:	ec 19       	sub	r30, r12
 7be:	e9 8b       	std	Y+17, r30	; 0x11
 7c0:	12 c0       	rjmp	.+36     	; 0x7e6 <vfprintf+0x1ea>
 7c2:	f2 01       	movw	r30, r4
 7c4:	c0 80       	ld	r12, Z
 7c6:	d1 80       	ldd	r13, Z+1	; 0x01
 7c8:	89 2b       	or	r24, r25
 7ca:	49 f0       	breq	.+18     	; 0x7de <vfprintf+0x1e2>
 7cc:	fd 85       	ldd	r31, Y+13	; 0x0d
 7ce:	6f 2f       	mov	r22, r31
 7d0:	77 27       	eor	r23, r23
 7d2:	67 fd       	sbrc	r22, 7
 7d4:	70 95       	com	r23
 7d6:	c6 01       	movw	r24, r12
 7d8:	0e 94 cf 05 	call	0xb9e	; 0xb9e <strnlen_P>
 7dc:	03 c0       	rjmp	.+6      	; 0x7e4 <vfprintf+0x1e8>
 7de:	c6 01       	movw	r24, r12
 7e0:	0e 94 c6 05 	call	0xb8c	; 0xb8c <strlen_P>
 7e4:	89 8b       	std	Y+17, r24	; 0x11
 7e6:	22 e0       	ldi	r18, 0x02	; 2
 7e8:	30 e0       	ldi	r19, 0x00	; 0
 7ea:	42 0e       	add	r4, r18
 7ec:	53 1e       	adc	r5, r19
 7ee:	3e 85       	ldd	r19, Y+14	; 0x0e
 7f0:	89 89       	ldd	r24, Y+17	; 0x11
 7f2:	38 1b       	sub	r19, r24
 7f4:	3e 87       	std	Y+14, r19	; 0x0e
 7f6:	06 c1       	rjmp	.+524    	; 0xa04 <vfprintf+0x408>
 7f8:	a2 fe       	sbrs	r10, 2
 7fa:	08 c0       	rjmp	.+16     	; 0x80c <vfprintf+0x210>
 7fc:	f2 01       	movw	r30, r4
 7fe:	80 81       	ld	r24, Z
 800:	91 81       	ldd	r25, Z+1	; 0x01
 802:	a2 81       	ldd	r26, Z+2	; 0x02
 804:	b3 81       	ldd	r27, Z+3	; 0x03
 806:	24 e0       	ldi	r18, 0x04	; 4
 808:	30 e0       	ldi	r19, 0x00	; 0
 80a:	09 c0       	rjmp	.+18     	; 0x81e <vfprintf+0x222>
 80c:	f2 01       	movw	r30, r4
 80e:	80 81       	ld	r24, Z
 810:	91 81       	ldd	r25, Z+1	; 0x01
 812:	aa 27       	eor	r26, r26
 814:	97 fd       	sbrc	r25, 7
 816:	a0 95       	com	r26
 818:	ba 2f       	mov	r27, r26
 81a:	22 e0       	ldi	r18, 0x02	; 2
 81c:	30 e0       	ldi	r19, 0x00	; 0
 81e:	42 0e       	add	r4, r18
 820:	53 1e       	adc	r5, r19
 822:	6c 01       	movw	r12, r24
 824:	7d 01       	movw	r14, r26
 826:	b7 ff       	sbrs	r27, 7
 828:	0c c0       	rjmp	.+24     	; 0x842 <vfprintf+0x246>
 82a:	82 e0       	ldi	r24, 0x02	; 2
 82c:	90 e0       	ldi	r25, 0x00	; 0
 82e:	a8 2a       	or	r10, r24
 830:	b9 2a       	or	r11, r25
 832:	f0 94       	com	r15
 834:	e0 94       	com	r14
 836:	d0 94       	com	r13
 838:	c0 94       	com	r12
 83a:	c1 1c       	adc	r12, r1
 83c:	d1 1c       	adc	r13, r1
 83e:	e1 1c       	adc	r14, r1
 840:	f1 1c       	adc	r15, r1
 842:	ef eb       	ldi	r30, 0xBF	; 191
 844:	ff ef       	ldi	r31, 0xFF	; 255
 846:	ae 22       	and	r10, r30
 848:	bf 22       	and	r11, r31
 84a:	21 c0       	rjmp	.+66     	; 0x88e <vfprintf+0x292>
 84c:	20 e4       	ldi	r18, 0x40	; 64
 84e:	30 e0       	ldi	r19, 0x00	; 0
 850:	a2 2a       	or	r10, r18
 852:	b3 2a       	or	r11, r19
 854:	38 e7       	ldi	r19, 0x78	; 120
 856:	3a 8b       	std	Y+18, r19	; 0x12
 858:	80 e1       	ldi	r24, 0x10	; 16
 85a:	89 8b       	std	Y+17, r24	; 0x11
 85c:	a2 fe       	sbrs	r10, 2
 85e:	08 c0       	rjmp	.+16     	; 0x870 <vfprintf+0x274>
 860:	f2 01       	movw	r30, r4
 862:	80 81       	ld	r24, Z
 864:	91 81       	ldd	r25, Z+1	; 0x01
 866:	a2 81       	ldd	r26, Z+2	; 0x02
 868:	b3 81       	ldd	r27, Z+3	; 0x03
 86a:	24 e0       	ldi	r18, 0x04	; 4
 86c:	30 e0       	ldi	r19, 0x00	; 0
 86e:	07 c0       	rjmp	.+14     	; 0x87e <vfprintf+0x282>
 870:	f2 01       	movw	r30, r4
 872:	80 81       	ld	r24, Z
 874:	91 81       	ldd	r25, Z+1	; 0x01
 876:	aa 27       	eor	r26, r26
 878:	bb 27       	eor	r27, r27
 87a:	22 e0       	ldi	r18, 0x02	; 2
 87c:	30 e0       	ldi	r19, 0x00	; 0
 87e:	42 0e       	add	r4, r18
 880:	53 1e       	adc	r5, r19
 882:	6c 01       	movw	r12, r24
 884:	7d 01       	movw	r14, r26
 886:	8f ec       	ldi	r24, 0xCF	; 207
 888:	9f ef       	ldi	r25, 0xFF	; 255
 88a:	a8 22       	and	r10, r24
 88c:	b9 22       	and	r11, r25
 88e:	87 01       	movw	r16, r14
 890:	76 01       	movw	r14, r12
 892:	fe 01       	movw	r30, r28
 894:	31 96       	adiw	r30, 0x01	; 1
 896:	f8 8b       	std	Y+16, r31	; 0x10
 898:	ef 87       	std	Y+15, r30	; 0x0f
 89a:	f9 89       	ldd	r31, Y+17	; 0x11
 89c:	6f 2e       	mov	r6, r31
 89e:	77 24       	eor	r7, r7
 8a0:	88 24       	eor	r8, r8
 8a2:	99 24       	eor	r9, r9
 8a4:	c8 01       	movw	r24, r16
 8a6:	b7 01       	movw	r22, r14
 8a8:	a4 01       	movw	r20, r8
 8aa:	93 01       	movw	r18, r6
 8ac:	0e 94 12 06 	call	0xc24	; 0xc24 <__udivmodsi4>
 8b0:	6a 30       	cpi	r22, 0x0A	; 10
 8b2:	24 f0       	brlt	.+8      	; 0x8bc <vfprintf+0x2c0>
 8b4:	2a 89       	ldd	r18, Y+18	; 0x12
 8b6:	62 0f       	add	r22, r18
 8b8:	61 52       	subi	r22, 0x21	; 33
 8ba:	01 c0       	rjmp	.+2      	; 0x8be <vfprintf+0x2c2>
 8bc:	60 5d       	subi	r22, 0xD0	; 208
 8be:	ef 85       	ldd	r30, Y+15	; 0x0f
 8c0:	f8 89       	ldd	r31, Y+16	; 0x10
 8c2:	61 93       	st	Z+, r22
 8c4:	f8 8b       	std	Y+16, r31	; 0x10
 8c6:	ef 87       	std	Y+15, r30	; 0x0f
 8c8:	c8 01       	movw	r24, r16
 8ca:	b7 01       	movw	r22, r14
 8cc:	a4 01       	movw	r20, r8
 8ce:	93 01       	movw	r18, r6
 8d0:	0e 94 12 06 	call	0xc24	; 0xc24 <__udivmodsi4>
 8d4:	79 01       	movw	r14, r18
 8d6:	8a 01       	movw	r16, r20
 8d8:	21 15       	cp	r18, r1
 8da:	31 05       	cpc	r19, r1
 8dc:	41 05       	cpc	r20, r1
 8de:	51 05       	cpc	r21, r1
 8e0:	09 f7       	brne	.-62     	; 0x8a4 <vfprintf+0x2a8>
 8e2:	cc 24       	eor	r12, r12
 8e4:	dd 24       	eor	r13, r13
 8e6:	76 01       	movw	r14, r12
 8e8:	ce 01       	movw	r24, r28
 8ea:	01 96       	adiw	r24, 0x01	; 1
 8ec:	cf 84       	ldd	r12, Y+15	; 0x0f
 8ee:	c8 1a       	sub	r12, r24
 8f0:	c5 01       	movw	r24, r10
 8f2:	82 73       	andi	r24, 0x32	; 50
 8f4:	90 70       	andi	r25, 0x00	; 0
 8f6:	89 2b       	or	r24, r25
 8f8:	19 f0       	breq	.+6      	; 0x900 <vfprintf+0x304>
 8fa:	fe 85       	ldd	r31, Y+14	; 0x0e
 8fc:	f1 50       	subi	r31, 0x01	; 1
 8fe:	fe 87       	std	Y+14, r31	; 0x0e
 900:	a6 fe       	sbrs	r10, 6
 902:	09 c0       	rjmp	.+18     	; 0x916 <vfprintf+0x31a>
 904:	29 89       	ldd	r18, Y+17	; 0x11
 906:	20 31       	cpi	r18, 0x10	; 16
 908:	11 f4       	brne	.+4      	; 0x90e <vfprintf+0x312>
 90a:	82 e0       	ldi	r24, 0x02	; 2
 90c:	01 c0       	rjmp	.+2      	; 0x910 <vfprintf+0x314>
 90e:	81 e0       	ldi	r24, 0x01	; 1
 910:	3e 85       	ldd	r19, Y+14	; 0x0e
 912:	38 1b       	sub	r19, r24
 914:	3e 87       	std	Y+14, r19	; 0x0e
 916:	28 e0       	ldi	r18, 0x08	; 8
 918:	82 2e       	mov	r8, r18
 91a:	91 2c       	mov	r9, r1
 91c:	8a 20       	and	r8, r10
 91e:	9b 20       	and	r9, r11
 920:	a3 fe       	sbrs	r10, 3
 922:	18 c0       	rjmp	.+48     	; 0x954 <vfprintf+0x358>
 924:	8d 85       	ldd	r24, Y+13	; 0x0d
 926:	28 2f       	mov	r18, r24
 928:	33 27       	eor	r19, r19
 92a:	27 fd       	sbrc	r18, 7
 92c:	30 95       	com	r19
 92e:	8c 2d       	mov	r24, r12
 930:	99 27       	eor	r25, r25
 932:	82 17       	cp	r24, r18
 934:	93 07       	cpc	r25, r19
 936:	3c f0       	brlt	.+14     	; 0x946 <vfprintf+0x34a>
 938:	e7 ef       	ldi	r30, 0xF7	; 247
 93a:	ff ef       	ldi	r31, 0xFF	; 255
 93c:	ae 22       	and	r10, r30
 93e:	bf 22       	and	r11, r31
 940:	88 24       	eor	r8, r8
 942:	99 24       	eor	r9, r9
 944:	07 c0       	rjmp	.+14     	; 0x954 <vfprintf+0x358>
 946:	fd 85       	ldd	r31, Y+13	; 0x0d
 948:	fc 19       	sub	r31, r12
 94a:	fd 87       	std	Y+13, r31	; 0x0d
 94c:	2e 85       	ldd	r18, Y+14	; 0x0e
 94e:	2f 1b       	sub	r18, r31
 950:	2e 87       	std	Y+14, r18	; 0x0e
 952:	03 c0       	rjmp	.+6      	; 0x95a <vfprintf+0x35e>
 954:	3e 85       	ldd	r19, Y+14	; 0x0e
 956:	3c 19       	sub	r19, r12
 958:	3e 87       	std	Y+14, r19	; 0x0e
 95a:	c5 01       	movw	r24, r10
 95c:	80 78       	andi	r24, 0x80	; 128
 95e:	91 70       	andi	r25, 0x01	; 1
 960:	89 2b       	or	r24, r25
 962:	69 f4       	brne	.+26     	; 0x97e <vfprintf+0x382>
 964:	8e 85       	ldd	r24, Y+14	; 0x0e
 966:	06 c0       	rjmp	.+12     	; 0x974 <vfprintf+0x378>
 968:	b1 01       	movw	r22, r2
 96a:	80 e2       	ldi	r24, 0x20	; 32
 96c:	90 e0       	ldi	r25, 0x00	; 0
 96e:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 972:	81 2f       	mov	r24, r17
 974:	18 2f       	mov	r17, r24
 976:	11 50       	subi	r17, 0x01	; 1
 978:	18 16       	cp	r1, r24
 97a:	b4 f3       	brlt	.-20     	; 0x968 <vfprintf+0x36c>
 97c:	1e 87       	std	Y+14, r17	; 0x0e
 97e:	a1 fe       	sbrs	r10, 1
 980:	04 c0       	rjmp	.+8      	; 0x98a <vfprintf+0x38e>
 982:	b1 01       	movw	r22, r2
 984:	8d e2       	ldi	r24, 0x2D	; 45
 986:	90 e0       	ldi	r25, 0x00	; 0
 988:	0b c0       	rjmp	.+22     	; 0x9a0 <vfprintf+0x3a4>
 98a:	a4 fe       	sbrs	r10, 4
 98c:	04 c0       	rjmp	.+8      	; 0x996 <vfprintf+0x39a>
 98e:	b1 01       	movw	r22, r2
 990:	8b e2       	ldi	r24, 0x2B	; 43
 992:	90 e0       	ldi	r25, 0x00	; 0
 994:	05 c0       	rjmp	.+10     	; 0x9a0 <vfprintf+0x3a4>
 996:	a5 fe       	sbrs	r10, 5
 998:	05 c0       	rjmp	.+10     	; 0x9a4 <vfprintf+0x3a8>
 99a:	b1 01       	movw	r22, r2
 99c:	80 e2       	ldi	r24, 0x20	; 32
 99e:	90 e0       	ldi	r25, 0x00	; 0
 9a0:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 9a4:	a6 fe       	sbrs	r10, 6
 9a6:	10 c0       	rjmp	.+32     	; 0x9c8 <vfprintf+0x3cc>
 9a8:	b1 01       	movw	r22, r2
 9aa:	80 e3       	ldi	r24, 0x30	; 48
 9ac:	90 e0       	ldi	r25, 0x00	; 0
 9ae:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 9b2:	89 89       	ldd	r24, Y+17	; 0x11
 9b4:	80 31       	cpi	r24, 0x10	; 16
 9b6:	41 f4       	brne	.+16     	; 0x9c8 <vfprintf+0x3cc>
 9b8:	b1 01       	movw	r22, r2
 9ba:	ea 89       	ldd	r30, Y+18	; 0x12
 9bc:	8e 2f       	mov	r24, r30
 9be:	99 27       	eor	r25, r25
 9c0:	87 fd       	sbrc	r24, 7
 9c2:	90 95       	com	r25
 9c4:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 9c8:	b0 fe       	sbrs	r11, 0
 9ca:	0d c0       	rjmp	.+26     	; 0x9e6 <vfprintf+0x3ea>
 9cc:	8e 85       	ldd	r24, Y+14	; 0x0e
 9ce:	06 c0       	rjmp	.+12     	; 0x9dc <vfprintf+0x3e0>
 9d0:	b1 01       	movw	r22, r2
 9d2:	80 e3       	ldi	r24, 0x30	; 48
 9d4:	90 e0       	ldi	r25, 0x00	; 0
 9d6:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 9da:	81 2f       	mov	r24, r17
 9dc:	18 2f       	mov	r17, r24
 9de:	11 50       	subi	r17, 0x01	; 1
 9e0:	18 16       	cp	r1, r24
 9e2:	b4 f3       	brlt	.-20     	; 0x9d0 <vfprintf+0x3d4>
 9e4:	1e 87       	std	Y+14, r17	; 0x0e
 9e6:	89 28       	or	r8, r9
 9e8:	69 f0       	breq	.+26     	; 0xa04 <vfprintf+0x408>
 9ea:	2d 85       	ldd	r18, Y+13	; 0x0d
 9ec:	06 c0       	rjmp	.+12     	; 0x9fa <vfprintf+0x3fe>
 9ee:	b1 01       	movw	r22, r2
 9f0:	80 e3       	ldi	r24, 0x30	; 48
 9f2:	90 e0       	ldi	r25, 0x00	; 0
 9f4:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 9f8:	21 2f       	mov	r18, r17
 9fa:	12 2f       	mov	r17, r18
 9fc:	11 50       	subi	r17, 0x01	; 1
 9fe:	12 16       	cp	r1, r18
 a00:	b4 f3       	brlt	.-20     	; 0x9ee <vfprintf+0x3f2>
 a02:	1d 87       	std	Y+13, r17	; 0x0d
 a04:	90 e8       	ldi	r25, 0x80	; 128
 a06:	69 2e       	mov	r6, r25
 a08:	71 2c       	mov	r7, r1
 a0a:	6a 20       	and	r6, r10
 a0c:	7b 20       	and	r7, r11
 a0e:	a7 fc       	sbrc	r10, 7
 a10:	0d c0       	rjmp	.+26     	; 0xa2c <vfprintf+0x430>
 a12:	8e 85       	ldd	r24, Y+14	; 0x0e
 a14:	06 c0       	rjmp	.+12     	; 0xa22 <vfprintf+0x426>
 a16:	b1 01       	movw	r22, r2
 a18:	80 e2       	ldi	r24, 0x20	; 32
 a1a:	90 e0       	ldi	r25, 0x00	; 0
 a1c:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 a20:	81 2f       	mov	r24, r17
 a22:	18 2f       	mov	r17, r24
 a24:	11 50       	subi	r17, 0x01	; 1
 a26:	18 16       	cp	r1, r24
 a28:	b4 f3       	brlt	.-20     	; 0xa16 <vfprintf+0x41a>
 a2a:	1e 87       	std	Y+14, r17	; 0x0e
 a2c:	fa 89       	ldd	r31, Y+18	; 0x12
 a2e:	f3 36       	cpi	r31, 0x63	; 99
 a30:	41 f4       	brne	.+16     	; 0xa42 <vfprintf+0x446>
 a32:	b1 01       	movw	r22, r2
 a34:	8c 2d       	mov	r24, r12
 a36:	99 27       	eor	r25, r25
 a38:	87 fd       	sbrc	r24, 7
 a3a:	90 95       	com	r25
 a3c:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 a40:	45 c0       	rjmp	.+138    	; 0xacc <vfprintf+0x4d0>
 a42:	2a 89       	ldd	r18, Y+18	; 0x12
 a44:	23 37       	cpi	r18, 0x73	; 115
 a46:	b1 f4       	brne	.+44     	; 0xa74 <vfprintf+0x478>
 a48:	46 01       	movw	r8, r12
 a4a:	56 01       	movw	r10, r12
 a4c:	19 89       	ldd	r17, Y+17	; 0x11
 a4e:	09 c0       	rjmp	.+18     	; 0xa62 <vfprintf+0x466>
 a50:	f5 01       	movw	r30, r10
 a52:	81 91       	ld	r24, Z+
 a54:	5f 01       	movw	r10, r30
 a56:	b1 01       	movw	r22, r2
 a58:	99 27       	eor	r25, r25
 a5a:	87 fd       	sbrc	r24, 7
 a5c:	90 95       	com	r25
 a5e:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 a62:	11 50       	subi	r17, 0x01	; 1
 a64:	a8 f7       	brcc	.-22     	; 0xa50 <vfprintf+0x454>
 a66:	64 01       	movw	r12, r8
 a68:	f9 89       	ldd	r31, Y+17	; 0x11
 a6a:	cf 0e       	add	r12, r31
 a6c:	d1 1c       	adc	r13, r1
 a6e:	2f ef       	ldi	r18, 0xFF	; 255
 a70:	29 8b       	std	Y+17, r18	; 0x11
 a72:	2c c0       	rjmp	.+88     	; 0xacc <vfprintf+0x4d0>
 a74:	3a 89       	ldd	r19, Y+18	; 0x12
 a76:	33 35       	cpi	r19, 0x53	; 83
 a78:	19 f0       	breq	.+6      	; 0xa80 <vfprintf+0x484>
 a7a:	0f 85       	ldd	r16, Y+15	; 0x0f
 a7c:	18 89       	ldd	r17, Y+16	; 0x10
 a7e:	1f c0       	rjmp	.+62     	; 0xabe <vfprintf+0x4c2>
 a80:	46 01       	movw	r8, r12
 a82:	86 01       	movw	r16, r12
 a84:	b9 88       	ldd	r11, Y+17	; 0x11
 a86:	08 c0       	rjmp	.+16     	; 0xa98 <vfprintf+0x49c>
 a88:	f8 01       	movw	r30, r16
 a8a:	84 91       	lpm	r24, Z
 a8c:	b1 01       	movw	r22, r2
 a8e:	99 27       	eor	r25, r25
 a90:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 a94:	0f 5f       	subi	r16, 0xFF	; 255
 a96:	1f 4f       	sbci	r17, 0xFF	; 255
 a98:	ba 94       	dec	r11
 a9a:	ff ef       	ldi	r31, 0xFF	; 255
 a9c:	bf 16       	cp	r11, r31
 a9e:	a1 f7       	brne	.-24     	; 0xa88 <vfprintf+0x48c>
 aa0:	64 01       	movw	r12, r8
 aa2:	29 89       	ldd	r18, Y+17	; 0x11
 aa4:	c2 0e       	add	r12, r18
 aa6:	d1 1c       	adc	r13, r1
 aa8:	f9 8b       	std	Y+17, r31	; 0x11
 aaa:	10 c0       	rjmp	.+32     	; 0xacc <vfprintf+0x4d0>
 aac:	f8 01       	movw	r30, r16
 aae:	82 91       	ld	r24, -Z
 ab0:	8f 01       	movw	r16, r30
 ab2:	b1 01       	movw	r22, r2
 ab4:	99 27       	eor	r25, r25
 ab6:	87 fd       	sbrc	r24, 7
 ab8:	90 95       	com	r25
 aba:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 abe:	ce 01       	movw	r24, r28
 ac0:	01 96       	adiw	r24, 0x01	; 1
 ac2:	08 17       	cp	r16, r24
 ac4:	19 07       	cpc	r17, r25
 ac6:	91 f7       	brne	.-28     	; 0xaac <vfprintf+0x4b0>
 ac8:	18 8b       	std	Y+16, r17	; 0x10
 aca:	0f 87       	std	Y+15, r16	; 0x0f
 acc:	67 28       	or	r6, r7
 ace:	b1 f0       	breq	.+44     	; 0xafc <vfprintf+0x500>
 ad0:	8e 85       	ldd	r24, Y+14	; 0x0e
 ad2:	06 c0       	rjmp	.+12     	; 0xae0 <vfprintf+0x4e4>
 ad4:	b1 01       	movw	r22, r2
 ad6:	80 e2       	ldi	r24, 0x20	; 32
 ad8:	90 e0       	ldi	r25, 0x00	; 0
 ada:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 ade:	81 2f       	mov	r24, r17
 ae0:	18 2f       	mov	r17, r24
 ae2:	11 50       	subi	r17, 0x01	; 1
 ae4:	18 16       	cp	r1, r24
 ae6:	b4 f3       	brlt	.-20     	; 0xad4 <vfprintf+0x4d8>
 ae8:	1e 87       	std	Y+14, r17	; 0x0e
 aea:	08 c0       	rjmp	.+16     	; 0xafc <vfprintf+0x500>
 aec:	b1 01       	movw	r22, r2
 aee:	fa 89       	ldd	r31, Y+18	; 0x12
 af0:	8f 2f       	mov	r24, r31
 af2:	99 27       	eor	r25, r25
 af4:	87 fd       	sbrc	r24, 7
 af6:	90 95       	com	r25
 af8:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 afc:	aa 24       	eor	r10, r10
 afe:	bb 24       	eor	r11, r11
 b00:	13 c0       	rjmp	.+38     	; 0xb28 <vfprintf+0x52c>
 b02:	2a 89       	ldd	r18, Y+18	; 0x12
 b04:	25 32       	cpi	r18, 0x25	; 37
 b06:	41 f4       	brne	.+16     	; 0xb18 <vfprintf+0x51c>
 b08:	3a e0       	ldi	r19, 0x0A	; 10
 b0a:	39 8b       	std	Y+17, r19	; 0x11
 b0c:	1e 86       	std	Y+14, r1	; 0x0e
 b0e:	1d 86       	std	Y+13, r1	; 0x0d
 b10:	81 e0       	ldi	r24, 0x01	; 1
 b12:	a8 2e       	mov	r10, r24
 b14:	b1 2c       	mov	r11, r1
 b16:	08 c0       	rjmp	.+16     	; 0xb28 <vfprintf+0x52c>
 b18:	b1 01       	movw	r22, r2
 b1a:	ea 89       	ldd	r30, Y+18	; 0x12
 b1c:	8e 2f       	mov	r24, r30
 b1e:	99 27       	eor	r25, r25
 b20:	87 fd       	sbrc	r24, 7
 b22:	90 95       	com	r25
 b24:	0e 94 e5 05 	call	0xbca	; 0xbca <fputc>
 b28:	2b 89       	ldd	r18, Y+19	; 0x13
 b2a:	3c 89       	ldd	r19, Y+20	; 0x14
 b2c:	2f 5f       	subi	r18, 0xFF	; 255
 b2e:	3f 4f       	sbci	r19, 0xFF	; 255
 b30:	3c 8b       	std	Y+20, r19	; 0x14
 b32:	2b 8b       	std	Y+19, r18	; 0x13
 b34:	f1 01       	movw	r30, r2
 b36:	83 81       	ldd	r24, Z+3	; 0x03
 b38:	83 ff       	sbrs	r24, 3
 b3a:	04 c0       	rjmp	.+8      	; 0xb44 <vfprintf+0x548>
 b3c:	eb 89       	ldd	r30, Y+19	; 0x13
 b3e:	fc 89       	ldd	r31, Y+20	; 0x14
 b40:	f4 91       	lpm	r31, Z
 b42:	03 c0       	rjmp	.+6      	; 0xb4a <vfprintf+0x54e>
 b44:	eb 89       	ldd	r30, Y+19	; 0x13
 b46:	fc 89       	ldd	r31, Y+20	; 0x14
 b48:	f0 81       	ld	r31, Z
 b4a:	fa 8b       	std	Y+18, r31	; 0x12
 b4c:	2a 89       	ldd	r18, Y+18	; 0x12
 b4e:	22 23       	and	r18, r18
 b50:	09 f0       	breq	.+2      	; 0xb54 <vfprintf+0x558>
 b52:	81 cd       	rjmp	.-1278   	; 0x656 <vfprintf+0x5a>
 b54:	f1 01       	movw	r30, r2
 b56:	86 81       	ldd	r24, Z+6	; 0x06
 b58:	97 81       	ldd	r25, Z+7	; 0x07
 b5a:	64 96       	adiw	r28, 0x14	; 20
 b5c:	0f b6       	in	r0, 0x3f	; 63
 b5e:	f8 94       	cli
 b60:	de bf       	out	0x3e, r29	; 62
 b62:	0f be       	out	0x3f, r0	; 63
 b64:	cd bf       	out	0x3d, r28	; 61
 b66:	df 91       	pop	r29
 b68:	cf 91       	pop	r28
 b6a:	1f 91       	pop	r17
 b6c:	0f 91       	pop	r16
 b6e:	ff 90       	pop	r15
 b70:	ef 90       	pop	r14
 b72:	df 90       	pop	r13
 b74:	cf 90       	pop	r12
 b76:	bf 90       	pop	r11
 b78:	af 90       	pop	r10
 b7a:	9f 90       	pop	r9
 b7c:	8f 90       	pop	r8
 b7e:	7f 90       	pop	r7
 b80:	6f 90       	pop	r6
 b82:	5f 90       	pop	r5
 b84:	4f 90       	pop	r4
 b86:	3f 90       	pop	r3
 b88:	2f 90       	pop	r2
 b8a:	08 95       	ret

00000b8c <strlen_P>:
 b8c:	fc 01       	movw	r30, r24
 b8e:	05 90       	lpm	r0, Z+
 b90:	00 20       	and	r0, r0
 b92:	e9 f7       	brne	.-6      	; 0xb8e <strlen_P+0x2>
 b94:	80 95       	com	r24
 b96:	90 95       	com	r25
 b98:	8e 0f       	add	r24, r30
 b9a:	9f 1f       	adc	r25, r31
 b9c:	08 95       	ret

00000b9e <strnlen_P>:
 b9e:	fc 01       	movw	r30, r24
 ba0:	05 90       	lpm	r0, Z+
 ba2:	61 50       	subi	r22, 0x01	; 1
 ba4:	70 40       	sbci	r23, 0x00	; 0
 ba6:	01 10       	cpse	r0, r1
 ba8:	d8 f7       	brcc	.-10     	; 0xba0 <strnlen_P+0x2>
 baa:	80 95       	com	r24
 bac:	90 95       	com	r25
 bae:	8e 0f       	add	r24, r30
 bb0:	9f 1f       	adc	r25, r31
 bb2:	08 95       	ret

00000bb4 <strnlen>:
 bb4:	fc 01       	movw	r30, r24
 bb6:	61 50       	subi	r22, 0x01	; 1
 bb8:	70 40       	sbci	r23, 0x00	; 0
 bba:	01 90       	ld	r0, Z+
 bbc:	01 10       	cpse	r0, r1
 bbe:	d8 f7       	brcc	.-10     	; 0xbb6 <strnlen+0x2>
 bc0:	80 95       	com	r24
 bc2:	90 95       	com	r25
 bc4:	8e 0f       	add	r24, r30
 bc6:	9f 1f       	adc	r25, r31
 bc8:	08 95       	ret

00000bca <fputc>:
 bca:	0f 93       	push	r16
 bcc:	1f 93       	push	r17
 bce:	cf 93       	push	r28
 bd0:	df 93       	push	r29
 bd2:	8c 01       	movw	r16, r24
 bd4:	eb 01       	movw	r28, r22
 bd6:	8b 81       	ldd	r24, Y+3	; 0x03
 bd8:	99 27       	eor	r25, r25
 bda:	81 ff       	sbrs	r24, 1
 bdc:	1b c0       	rjmp	.+54     	; 0xc14 <fputc+0x4a>
 bde:	82 ff       	sbrs	r24, 2
 be0:	0d c0       	rjmp	.+26     	; 0xbfc <fputc+0x32>
 be2:	2e 81       	ldd	r18, Y+6	; 0x06
 be4:	3f 81       	ldd	r19, Y+7	; 0x07
 be6:	8c 81       	ldd	r24, Y+4	; 0x04
 be8:	9d 81       	ldd	r25, Y+5	; 0x05
 bea:	28 17       	cp	r18, r24
 bec:	39 07       	cpc	r19, r25
 bee:	64 f4       	brge	.+24     	; 0xc08 <fputc+0x3e>
 bf0:	e8 81       	ld	r30, Y
 bf2:	f9 81       	ldd	r31, Y+1	; 0x01
 bf4:	01 93       	st	Z+, r16
 bf6:	f9 83       	std	Y+1, r31	; 0x01
 bf8:	e8 83       	st	Y, r30
 bfa:	06 c0       	rjmp	.+12     	; 0xc08 <fputc+0x3e>
 bfc:	e8 85       	ldd	r30, Y+8	; 0x08
 bfe:	f9 85       	ldd	r31, Y+9	; 0x09
 c00:	80 2f       	mov	r24, r16
 c02:	09 95       	icall
 c04:	89 2b       	or	r24, r25
 c06:	31 f4       	brne	.+12     	; 0xc14 <fputc+0x4a>
 c08:	8e 81       	ldd	r24, Y+6	; 0x06
 c0a:	9f 81       	ldd	r25, Y+7	; 0x07
 c0c:	01 96       	adiw	r24, 0x01	; 1
 c0e:	9f 83       	std	Y+7, r25	; 0x07
 c10:	8e 83       	std	Y+6, r24	; 0x06
 c12:	02 c0       	rjmp	.+4      	; 0xc18 <fputc+0x4e>
 c14:	0f ef       	ldi	r16, 0xFF	; 255
 c16:	1f ef       	ldi	r17, 0xFF	; 255
 c18:	c8 01       	movw	r24, r16
 c1a:	df 91       	pop	r29
 c1c:	cf 91       	pop	r28
 c1e:	1f 91       	pop	r17
 c20:	0f 91       	pop	r16
 c22:	08 95       	ret

00000c24 <__udivmodsi4>:
 c24:	a1 e2       	ldi	r26, 0x21	; 33
 c26:	1a 2e       	mov	r1, r26
 c28:	aa 1b       	sub	r26, r26
 c2a:	bb 1b       	sub	r27, r27
 c2c:	fd 01       	movw	r30, r26
 c2e:	0d c0       	rjmp	.+26     	; 0xc4a <__udivmodsi4_ep>

00000c30 <__udivmodsi4_loop>:
 c30:	aa 1f       	adc	r26, r26
 c32:	bb 1f       	adc	r27, r27
 c34:	ee 1f       	adc	r30, r30
 c36:	ff 1f       	adc	r31, r31
 c38:	a2 17       	cp	r26, r18
 c3a:	b3 07       	cpc	r27, r19
 c3c:	e4 07       	cpc	r30, r20
 c3e:	f5 07       	cpc	r31, r21
 c40:	20 f0       	brcs	.+8      	; 0xc4a <__udivmodsi4_ep>
 c42:	a2 1b       	sub	r26, r18
 c44:	b3 0b       	sbc	r27, r19
 c46:	e4 0b       	sbc	r30, r20
 c48:	f5 0b       	sbc	r31, r21

00000c4a <__udivmodsi4_ep>:
 c4a:	66 1f       	adc	r22, r22
 c4c:	77 1f       	adc	r23, r23
 c4e:	88 1f       	adc	r24, r24
 c50:	99 1f       	adc	r25, r25
 c52:	1a 94       	dec	r1
 c54:	69 f7       	brne	.-38     	; 0xc30 <__udivmodsi4_loop>
 c56:	60 95       	com	r22
 c58:	70 95       	com	r23
 c5a:	80 95       	com	r24
 c5c:	90 95       	com	r25
 c5e:	9b 01       	movw	r18, r22
 c60:	ac 01       	movw	r20, r24
 c62:	bd 01       	movw	r22, r26
 c64:	cf 01       	movw	r24, r30
 c66:	08 95       	ret
